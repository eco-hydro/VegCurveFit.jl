```{r}
library(phenofit)
library(Ipaper) # remotes::install_github("rpkgs/Ipaper")
library(ggplot2)
# library(grid)
# library(ggnewscale)
library(lubridate)
library(data.table)
library(dplyr)
```

```{r}
date_start <- as.Date("2016-01-01")
date_end <- as.Date("2023-12-31")

f <- "data/Tumbarumba/Tumbarumba_EVI2.csv"
d <- fread(f) |>
  mutate(t = as.Date(t)) |>
  filter(t >= date_start, t <= date_end) |>
  select(-site)
fwrite(d, "data/Tumbarumba_EVI2.csv")
```

```{r}
ggplot(d, aes(t, y)) + 
  geom_line()
# write_fig(p, 'd:/Figure1.pdf', 10, 5)
```

```{r}
nptperyear <- 40
wFUN <- "wTSM"

INPUT <- check_input(d$t, d$y, d$w,
  QC_flag = d$QC_flag,
  nptperyear = nptperyear,
  maxgap = nptperyear / 4, wmin = 0.2, south = TRUE, verbose = TRUE
)

str(INPUT)
```

```{r}
# curve fitting by year
brks_mov <- season_mov(INPUT,
  options = list(
    rFUN = "smooth_wWHIT", wFUN = "wTSM", maxExtendMonth = 6, calendarYear = TRUE, wmin = 0.2,
    lambda = 100, iters = 2,
    r_min = 0.05, ypeak_min = 0.1,
    verbose = TRUE
  ), years.run = 2016:2023
)

plot_season(INPUT, brks_mov, ylab = "VI", margin = 0.2, show.shade = FALSE)
```


## julia

```{julia}
using VegCurveFit
using RTableTools
using UnPack
using Plots
using Dates

gr(framestyle=:box)

d = fread("data/Tumbarumba_EVI2.csv")
@unpack y, t, w, QC_flag = d
w = eltype(y).(w)
t = 1:length(y)

# x_lims, x_ticks = date_ticks(t)
# xticks = x_ticks, xlims = x_lims,
p = plot(t, y; label="VI")
# Plots.scatter!(p, t, y; markersize=2, label=nothing)

## Smooth
r = smooth_whit(y, w; lambda=1000)
niter = length(r["predict"])
pred = r["predict"]
for i = 1:niter
  d = pred[i]
  plot!(p, t, d.z, label="iter $i")
end

p
# plot_input(t, y, QC_flag)
```

## SG and Whit has no ability to interp for arbitrary space x


```{julia}
using VegCurveFit
using Dates
using Plots
gr(framestyle=:box)

d = deserialize("data/Tumbarumba_EVI2")
@unpack y, t, w = d

x = datetime2julian.(DateTime.(t)) |> x -> x .- x[1]
```


```{julia}
lambda = Float64(1e7)
@time z = whit(y, x; lambda, d=2);

plot(x, y)
plot!(x, z)

@time z2, amp, phi = wHANTS(y, w, x; nf=1);
plot!(x, z2)
```

```{julia}
using RCall

R"""
y = $y
x = $x
save(x, y, file = "debug.rda")
"""

```


> 和R语言版本对比一下
